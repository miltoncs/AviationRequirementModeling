package refuel_single
public
	with base_types;
	with gcas_nodes;
	
	system Refuel_singleton
		features
			timeToRecovery: out data port real;
			
		annex agree {**
			eq t: real = 0.0 -> pre(t) + 0.1;
			
			eq fuelDistance: real = 50.0;
			
			eq returnToHomeMode: bool = false;
			
			-- Return to home type of refuel
			const velocity: real = 5.0;
			eq distance: real = 0.0 -> 
			if (returnToHomeMode) then pre(distance) - velocity
							      else pre(distance) + velocity;
			
			eq timeToFailure: real = (fuelDistance - distance) / velocity ;
			
			guarantee "ttr depends on distance from home": timeToRecovery = distance / velocity ;
			guarantee "in range of home/refueling": timeToRecovery > timeToFailure ;
			
		**};
	end Refuel_singleton;
	
	system implementation Refuel_singleton.impl
		annex agree {**
				assign timeToRecovery = distance / velocity ;
			**};
	end Refuel_singleton.impl;
	
	
	-- Type Aliases
	
	data int extends base_types::Integer
	end int;
	
	data real extends base_types::Float 
	end real;
	
	data bool extends base_types::Boolean
	end bool;
	
end refuel_single;
