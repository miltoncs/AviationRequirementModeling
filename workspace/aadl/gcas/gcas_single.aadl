package gcas_single
public
	with base_types;
	with gcas_nodes;
	
	system GCAS_singleton
		features
			altitude: in data port real;
			timeToRecovery: out data port real;
			
		annex agree {**
			eq t: real = 0.0 -> pre(t) + 0.1;
			eq height: real;
			
			const minHeightAllowed: real = 200.0;
			
			guarantee "safe after some time": t >= timeToRecovery => (height > minHeightAllowed) and (height > pre(height));

		**};
	end GCAS_singleton;
	
	system implementation GCAS_singleton.impl
		annex agree {**
							
				assign height = gcas_nodes.kinematicLinearization(t);
				assign timeToRecovery = 3.7;
		**};
	end GCAS_singleton.impl;
	
	
	-- Type Aliases
	
	data int extends base_types::Integer
	end int;
	
	data real extends base_types::Float
	end real;
	
	data bool extends base_types::Boolean
	end bool;
	
end gcas_single;
